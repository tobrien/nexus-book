<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.sonatype.com/tmp/docbook/xml/4.5/docbookx.dtd">
<chapter id="install">
  <title>Installing and Running Nexus</title>

  <section>
    <title>Downloading Nexus</title>

    <para><indexterm>
        <primary>Nexus Open Source</primary>
      </indexterm><indexterm>
        <primary>Nexus Professional</primary>
      </indexterm>There are two distributions of Nexus: <ulink
    url="http://nexus.sonatype.org">Nexus Open Source</ulink> and <ulink
    url="http://www.sonatype.com/products/nexus">Nexus Professional</ulink>.
    Nexus Open Source is a fully-featured repository manager which can be
    freely used, customized, and distributed under the <indexterm>
        <primary>GNU Affero General Public License (AGPL)</primary>
      </indexterm><ulink url="http://opensource.org/licenses/agpl-v3.html">GNU
    Affero General Public License (AGPL) Version 3</ulink>. Nexus Professional
    is a distribution of Nexus with features that are relevant to large
    enterprises and organizations which require complex procurement and
    staging workflows in addition to more advanced LDAP integration, Atlassian
    Crowd support, and other development infrastructure. The differences
    between Nexus Open Source and Nexus Professional are explored in <xref
    linkend="repoman" />.</para>

    <section id="installing-sect-dl-open">
      <title>Downloading Nexus Open Source</title>

      <para><indexterm>
          <primary>Nexus Open Source</primary>

          <secondary>downloading</secondary>
        </indexterm>To download Nexus Open Source, go to <indexterm>
          <primary>Nexus Open Source</primary>

          <secondary>website</secondary>
        </indexterm><ulink
      url="http://nexus.sonatype.org/download-nexus.html">http://nexus.sonatype.org/download-nexus.html</ulink>.
      Click on the Download Site link shown in <xref
      linkend="fig-installing_open-source-dl" /> and then download the
      appropriate Nexus Open Source distribution by clicking on the
      appropriate archive as shown in <xref
      linkend="fig-installing_open-source-dl-select" />. Nexus Open Source is
      available as a <acronym>ZIP</acronym> and a Gzip'd
      <acronym>TAR</acronym> file under the file names
      <filename>${nexusopen.bundle.name}.zip</filename> and
      <filename>${nexusopen.bundle.name}.tgz</filename>.</para>

      <figure id="fig-installing_open-source-dl">
        <title>Downloading Nexus Open Source from
        http://nexus.sonatype.org</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata align="center"
                       fileref="figs/web/installing_open-source-dl.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/installing_open-source-dl.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <figure id="fig-installing_open-source-dl-select">
        <title>Selecting the Nexus Open Source Distribution Download</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata align="center"
                       fileref="figs/web/installing_open-source-dl-select.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/installing_open-source-dl-select.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <note>
        <para>Nexus Open Source can also be deployed as a web application in a
        servlet container like Jetty or Tomcat or an application server like
        Glassfish or JBoss. Instructions for installing Nexus as a WAR are
        found in <xref linkend="install-sect-as-a-war" />.</para>
      </note>
    </section>

    <section id="install-sect-download">
      <title>Downloading Nexus Professional</title>

      <para><indexterm>
          <primary>Nexus Professional</primary>

          <secondary>downloading</secondary>
        </indexterm>To download Nexus Professional, go to <ulink
      url="http://www.sonatype.com/products/downloads">http://www.sonatype.com/products/downloads</ulink>.
      Click on the download link shown in <xref
      linkend="fig-installing_pro-dl" /> and fill out the Nexus Professional
      Registration form. After filling out a brief contact form and agreeing
      to the <indexterm>
          <primary>Nexus Professional</primary>

          <secondary>evaluation</secondary>
        </indexterm>evaluation license, you will be sent an email with a link
      to download the Nexus Professional distribution. Nexus is available as a
      <acronym>ZIP</acronym> and a Gzip'd <acronym>TAR</acronym> file under
      the file names <filename>${nexus.bundle.name}.zip</filename> and
      <filename>${nexus.bundle.name}.tgz</filename>.</para>

      <figure id="fig-installing_pro-dl">
        <title>Downloading Nexus Professional from
        http://www.sonaype.com/products/download</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata align="center" fileref="figs/web/installing_pro-dl.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/installing_pro-dl.pdf" scalefit="0"
                       width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>

  <section>
    <title>Installing Nexus</title>

    <para>The following sections detail the installation process for both
    Nexus Open Source and Nexus Professional.</para>

    <section id="insatll-sect-prereq">
      <title>Nexus Prerequisites</title>

      <para>Nexus Open Source and Nexus Professional only have one
      prerequisite, a <indexterm>
          <primary>Java</primary>

          <secondary>Java Runtime Environment (JRE)</secondary>
        </indexterm>Java Runtime Environment (JRE) compatible with Java 5 or
      higher. Nexus is most often run with the JRE that is bundled with a
      <indexterm>
          <primary>Java</primary>

          <secondary>Java Development Kit (JDK)</secondary>
        </indexterm>Java Development Kit (JDK) installation, and it can be run
      with the latest version of Sun's JDK for Java 5 or Java 6. To download
      the latest release of the Sun JDK, go to <ulink
      url="http://developers.sun.com/downloads/"><indexterm>
          <primary>Java</primary>

          <secondary>Java Development Kit</secondary>

          <tertiary>downloading</tertiary>
        </indexterm>http://developers.sun.com/downloads/</ulink>, and download
      the latest Java 6 JDK or an older Java 5 JDK, either will work but Java
      6 is recommended.</para>
    </section>

    <section id="installing-sect-open-source">
      <title>Installing Nexus Open Source</title>

      <para>The following instructions are for installing Nexus Open Source as
      a stand-alone server. Nexus comes bundled with a Jetty instance which
      listens to all configured IP addresses on a host (0.0.0.0) and runs on
      port 8081 by default. If you would like to run Nexus Open Source as a
      web application in an existing application server or servlet container,
      please refer to the instructions in <xref
      linkend="install-sect-as-a-war" />.</para>

      <para><indexterm>
          <primary>Nexus Open Source</primary>

          <secondary>downloading</secondary>
        </indexterm><indexterm>
          <primary>Nexus Open Source</primary>

          <secondary>Installation</secondary>
        </indexterm>Installing Nexus Open Source is straightforward. Unpack
      the Nexus web application archive in a directory. If you are installing
      Nexus on a local workstation to give it a test run, you can install it
      in your home directory or wherever you like; Nexus doesn't have any hard
      coded directories, it will run from any directory. If you downloaded the
      <acronym>ZIP</acronym> archive, run:</para>

      <screen>$ <command>unzip ${nexusopen.bundle.name}.zip</command></screen>

      <para>And, if you download the GZip'd <acronym>TAR</acronym> archive,
      run:</para>

      <screen>$ <command>tar xvzf ${nexusopen.bundle.name}.tgz</command></screen>

      <para><note>
          <para>There are some known incompatibilities with the version of tar
          provided by Solaris and the gzip tar format. If you are installing
          Nexus on Solaris, you must use the GNU tar application, or you will
          end up with corrupted files. Please see <ulink
          url="http://sunsolarisadmin.blogspot.com/2007/03/how-to-install-gnu-tar-in-solaris.html">http://sunsolarisadmin.blogspot.com/2007/03/how-to-install-gnu-tar-in-solaris.html</ulink>.</para>
        </note><indexterm>
          <primary>Nexus Open Source</primary>

          <secondary>installation directory</secondary>
        </indexterm>If you are installing Nexus on a server, you might want to
      use a directory other than your home directory. On a Unix machine, this
      book assumes that Nexus is installed in
      <filename>/usr/local/${nexusopen.version.name}</filename> with a
      symbolic link <filename>/usr/local/nexus</filename> to the nexus
      directory. Using a generic symbolic link nexus to a specific version is
      a common practice which makes it easier to upgrade when a newer version
      of Nexus is made available.</para>

      <screen>$ <command>sudo cp ${nexusopen.bundle.name}.tgz /usr/local</command>
$ <command>cd /usr/local</command>
$ <command>sudo tar xvzf ${nexusopen.bundle.name}.tgz</command>
$ <command>ln -s ${nexusopen.version.name} nexus</command></screen>

      <para><indexterm>
          <primary>Environment Variables</primary>

          <secondary>NEXUS_HOME</secondary>
        </indexterm>Although it isn't required for Nexus to run, you may want
      to set an environment variable <varname>NEXUS_HOME</varname> in your
      environment which points to the installation directory of Nexus. This
      chapter will refer to this location as
      <varname>\${NEXUS_HOME}</varname>.</para>

      <para><indexterm>
          <primary>Nexus</primary>

          <secondary>Sonatype Work directory</secondary>
        </indexterm>The Nexus installation directory
      <filename>${nexusopen.version.name}</filename> has a sibling directory
      named <filename>sonatype-work</filename>. This directory contains all of
      the repository and configuration data for Nexus and is stored outside of
      the Nexus installation directory to make it easier to upgrade to a newer
      version of Nexus. By default, this directory is always a sibling to the
      nexus installation directory; if you installed nexus in
      <filename>/usr/local</filename>, the <filename>/usr/local/</filename>
      directory would also contain a <filename>sonatype-work</filename>
      subdirectory containing all of the content and configuration. The
      location of the sonatype-work directory can be customized by altering
      the <varname>nexus-work</varname> property in
      <filename>\${NEXUS_HOME}/conf/plexus.properties</filename>.</para>
    </section>

    <section id="install-sect-pro">
      <title>Installing Nexus Professional</title>

      <para>The following instructions are for installing Nexus Professional
      as a stand-alone server. Nexus Professional is bundled with a Jetty
      instance which listens to all configured IP addresses on a host
      (0.0.0.0) and runs on port 8081 by default.</para>

      <para><indexterm>
          <primary>Nexus Professional</primary>

          <secondary>downloading</secondary>
        </indexterm><indexterm>
          <primary>Nexus Professional</primary>

          <secondary>installation</secondary>
        </indexterm>Installing Nexus is straightforward, unpack the Nexus web
      application archive in a directory. If you are installing Nexus on a
      local workstation to give it a test run, you can install it in your home
      directory or wherever you like; Nexus doesn't have any hard coded
      directories, it will run from any directory. If you downloaded the
      <acronym>ZIP</acronym> archive, run:</para>

      <screen>$ <command>unzip ${nexus.bundle.name}.zip</command></screen>

      <para>And, if you download the GZip'd <acronym>TAR</acronym> archive,
      run:</para>

      <screen>$ <command>tar xvzf ${nexus.bundle.name}.tgz</command></screen>

      <para><indexterm>
          <primary>Nexus Professional</primary>

          <secondary>installation directory</secondary>
        </indexterm>If you are installing Nexus on a server, you might want to
      use a directory other than your home directory. On a Unix machine, this
      book assumes that Nexus is installed in
      <filename>/usr/local/${nexus.version.name}</filename> with a symbolic
      link <filename>/usr/local/nexus</filename> to the nexus directory. Using
      a symbolic link nexus to a directory which holds a specific version of
      Nexus is a common practice that makes it easier to upgrade to a newer
      version of Nexus.</para>

      <screen>$ <command>sudo cp ${nexus.bundle.name}.tgz /usr/local</command>
$ <command>cd /usr/local</command>
$ <command>sudo tar xvzf ${nexus.bundle.name}.tgz</command>
$ <command>ln -s ${nexus.version.name} nexus</command></screen>

      <para><indexterm>
          <primary>Environment Variables</primary>

          <secondary>NEXUS_HOME</secondary>
        </indexterm>Although it isn't required for Nexus to run, you may want
      to set an environment variable <varname>NEXUS_HOME</varname> in your
      environment which points to the installation directory of Nexus. This
      chapter will refer to this location as
      <varname>\${NEXUS_HOME}</varname>. The Nexus installation directory
      <filename>${nexus.version.name}</filename> has a sibling directory named
      <filename>sonatype-work</filename>. This directory contains all of the
      repository and configuration data for Nexus and is stored outside of the
      Nexus installation directory to make it easier to upgrade to a newer
      version of Nexus.</para>
    </section>
  </section>

  <section id="installation-sect-upgrading">
    <title>Upgrading Nexus</title>

    <para><indexterm>
        <primary>Nexus Open Source</primary>

        <secondary>upgrading</secondary>
      </indexterm><indexterm>
        <primary>Nexus Professional</primary>

        <secondary>upgrading</secondary>
      </indexterm>Since Nexus separates its configuration and data storage
    from the application, it is easy to upgrade an existing Nexus
    installation. To upgrade Nexus, unpack the Nexus archive in the directory
    which contains the existing Nexus installation. Once the archive is
    unpacked, the new Nexus application directory should be a sibling to your
    existing <filename>sonatype-work/</filename> directory. If you have
    defined a symbolic link for the version of Nexus to use, change that to
    point at the new Nexus application directory. When you start the new
    instance of Nexus it will read the existing repository configuration from
    the <filename>sonatype-work/</filename> directory.</para>
  </section>

  <section id="install-sect-running">
    <title>Running Nexus</title>

    <para><indexterm>
        <primary>Nexus Open Source</primary>

        <secondary>running</secondary>
      </indexterm><indexterm>
        <primary>Nexus Professional</primary>

        <secondary>running</secondary>
      </indexterm>When you start Nexus, you are starting a web server on the
    default port of <varname>0.0.0.0:8081</varname>. Nexus runs within a
    servlet container called <indexterm>
        <primary>Jetty</primary>
      </indexterm>Jetty and it is started with a native service wrapper called
    the <ulink
    url="http://wrapper.tanukisoftware.org/doc/english/introduction.html">Tanuki
    Java Service Wrapper</ulink>. This service wrapper can be configured to
    run Nexus as a <indexterm>
        <primary>Windows service</primary>
      </indexterm>Windows service or a Unix daemon. To start Nexus, you will
    need to find the appropriate startup script for your platform. To see the
    list of available platforms, list the contents of the
    <filename>\${NEXUS_HOME}/bin/jsw</filename> directory.</para>

    <para>The following example listing starts Nexus using the script for
    <indexterm>
        <primary>Installation</primary>

        <secondary>on Mac OSX</secondary>
      </indexterm>Mac OSX. First we list the contents of the
    <filename>\${NEXUS_HOME}/bin/jsw</filename> to show you the available
    platforms, then we make the contents of the bin directory executable with
    <command>chmod</command>. The Mac OS X wrapper is started with a call to
    <command>nexus start</command>, and then we tail the
    <filename>wrapper.log</filename> in
    <filename>\${NEXUS_HOME}/logs</filename>. Nexus will initialize itself and
    print a message stating what IP address and port it is listening
    on.</para>

    <screen>$ <command>cd /usr/local/nexus</command>
$ <command>ls ./bin/jsw/</command>
conf/                linux-x86-64/        solaris-x86-32/
lib/                 macosx-universal-32/ windows-x86-32/
license/             macosx-universal-64/ windows-x86-64/
linux-ppc-64/        solaris-sparc-32/
linux-x86-32/        solaris-sparc-64/
$ <command>chmod -R a+x bin</command>
$ <command>./bin/jsw/macosx-universal-64/nexus start</command>
Starting Nexus Repository Manager...
Started Nexus Repository Manager.
$ <command>tail -f logs/wrapper.log</command> 
INFO  ... [ServletContainer:default] - SelectChannelConnector@0.0.0.0:8081
</screen>

    <para>At this point, Nexus will be running and listening on all IP
    addresses (0.0.0.0) that are configured for the current host on port 8081.
    To use Nexus, fire up a web browser and type in the URL: <ulink
    url="http://localhost:8081/nexus">http://localhost:8081/nexus</ulink>.
    While we use "localhost" throughout this book, you may need to use the IP
    Loopback Address of "127.0.0.1" or the IP address assigned to the machine
    running Nexus. Click on the <indexterm>
        <primary>logging in</primary>
      </indexterm>"Log In" link in the upper right-hand corner of the web
    page, and you should see the login dialog. <emphasis><indexterm>
        <primary>default password</primary>
      </indexterm><indexterm>
        <primary>Nexus Open Source</primary>

        <secondary>default password</secondary>
      </indexterm><indexterm>
        <primary>Nexus Professional</primary>

        <secondary>default password</secondary>
      </indexterm><indexterm>
        <primary>admin password</primary>
      </indexterm>THE DEFAULT NEXUS USERNAME AND PASSWORD IS "admin" AND
    "admin123".</emphasis></para>

    <figure id="fig-install-default-admin">
      <title>Default Nexus Administrative Credentials (admin/admin123)</title>

      <mediaobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/installation_default-admin.png" />
        </imageobject>

        <imageobject role="print">
          <imagedata fileref="figs/print/installation_default-admin.pdf" />
        </imageobject>
      </mediaobject>
    </figure>

    <figure floatstyle="" id="fig-installing-app-win">
      <title>Nexus Application Window (default login/password is
      admin/admin123)</title>

      <screenshot>
        <mediaobject>
          <imageobject role="web">
            <imagedata align="center"
                       fileref="figs/web/repository-manager_nexus-login.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/repository-manager_nexus-login.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </screenshot>
    </figure>
  </section>

  <section id="install-sect-repoman-post-install">
    <title>Post-Install Checklist</title>

    <para><indexterm>
        <primary>Nexus Open Source</primary>

        <secondary>post-install</secondary>
      </indexterm><indexterm>
        <primary>Nexus Professional</primary>

        <secondary>post-install</secondary>
      </indexterm><indexterm>
        <primary>post-install checklist</primary>
      </indexterm>Nexus ships with some default passwords and settings for
    repository indexing that need to be changed for your installation to be
    useful (and secure). After installing and running Nexus, you need to make
    sure that you complete the following tasks:</para>

    <variablelist>
      <varlistentry>
        <term>Step 1: Change the Administrative Password and Email
        Address</term>

        <listitem>
          <para><indexterm>
              <primary>Nexus</primary>

              <secondary>default password</secondary>
            </indexterm>The administrative password defaults to
          <varname>admin123</varname>. The first thing you should do to your
          new Nexus installation is change this password. To change the
          administrative password login as "admin" with the password
          "admin123", and click on Change Password under the Security menu in
          the left-hand side of the browser window. For more detailed
          instructions, see <xref
          linkend="using-sect-changing-password" />.</para>

          <!--Put in instructions for email address-->
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Step 2: Configure the SMTP Settings</term>

        <listitem>
          <para><indexterm>
              <primary>Simple Mail Transfer Protocol</primary>

              <seealso>SMTP</seealso>
            </indexterm><indexterm>
              <primary>Email</primary>
            </indexterm>Nexus can send username and password recovery emails,
          to enable this feature, you will need to configure Nexus with a SMTP
          Host and Port as well as any necessary authentication parameters
          that Nexus needs to connect to the mail server. To configure the
          SMTP settings, load the server configuration dialog shown in <xref
          linkend="fig-nexus-server-config" />.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Step 3: Enable Remote Index Downloads</term>

        <listitem>
          <para><indexterm>
              <primary>Nexus Indexer</primary>

              <secondary>downloading remote</secondary>
            </indexterm>Nexus ships with three important proxy repositories
          for the Maven Central repository, Apache Snapshot repository, and
          the Codehaus Snapshot repository. Each of these repositories
          contains thousands (or tens of thousands) of artifacts and it would
          be impractical to download the entire contents of each. To that end,
          most repositories maintain an index which catalogs the entire
          contents and provides for fast and efficient searching. Nexus uses
          these remote indexes to search for artifacts, but we've disabled the
          index download as a default setting. To download remote
          indexes,</para>

          <orderedlist>
            <listitem>
              <para>Click on Repositories under the Administration menu in the
              left-hand side of the browser window.</para>
            </listitem>

            <listitem>
              <para>Select each of the three proxy repositories and change
              Download Remote Indexes to true in the Configuration tab. You'll
              need to load the dialog shown in <xref
              linkend="fig-repo-config" /> for each of the three
              repositories.</para>
            </listitem>
          </orderedlist>

          <para>This will trigger Nexus to re-index these repositories, during
          which the remote index files will be downloaded. It might take Nexus
          a few minutes to download the entire index, but once you have it,
          you'll be able to search the entire contents of the Maven
          repository.</para>

          <para>Once you've enabled remote index downloads, you still won't be
          able to browse the complete contents of a remote repository.
          Downloading the remote index allows you to search for artifacts in a
          repository, but until you download those artifacts from the remote
          repository they will not show in the repository tree when you are
          browsing a repository. When browsing a repository, you will only be
          shown artifacts which have been downloaded from the remote
          repository.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Step 4: Change the Deployment Password</term>

        <listitem>
          <para><indexterm>
              <primary>Nexus</primary>

              <secondary>default password</secondary>
            </indexterm>The deployment user's password defaults to
          <varname>deployment123</varname>. Change this password to make sure
          that only authorized developers can deploy artifacts to your Nexus
          installation. To change the deployment password: log in as an
          administrator, click on Security to expand the Security menu, then
          click on Users. You should then see a list of users. Right-click on
          the deployment user and select "Set Password".</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Step 5: Install Professional License (Nexus Professional
        Only)</term>

        <listitem>
          <para><indexterm>
              <primary>Nexus Professional</primary>

              <secondary>installing license</secondary>
            </indexterm>If you are running Nexus Professional and you have
          purchased a license from Sonatype, you will need to upload your
          license. This license will be emailed to you after you have
          purchased Nexus Professional from <ulink
          url="http://store.sonatype.com">http://store.sonatype.com</ulink>.
          To load the License tab, click on Licensing under the Enterprise
          menu in the Nexus application menu. For more information about
          installing a Nexus Professional license file, see <xref
          linkend="installing-sect-licensing" />.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Step 6: If necessary, set the LANG Environment Variable</term>

        <listitem>
          <para>If your Nexus instance needs to store configuration and data
          using an international character set, you should set the LANG
          environment variable. The Java Runtime will adapt to the value of
          the LANG environment variable and ensure that configuration data is
          saved using the appropriate character type. If you are starting
          Nexus as a service, place this environment variable in the startup
          script found in <filename>/etc/init.d/nexus</filename>. For more
          information about locale settings in Ubuntu go <ulink
          url="https://help.ubuntu.com/community/Locale">here</ulink>. </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section>
    <title>Configuring Nexus as a Service</title>

    <para>When installing Nexus, you will often want to configure Nexus as a
    service. <indexterm>
        <primary>Windows service</primary>
      </indexterm>If you are on Windows, the Nexus distribution includes
    binaries that can work with the Windows Services subsystem and if you are
    on another platform such as GNU/Linux<footnote>
        <para>While many refer to GNU/Linux as Linux, we've decided to use
        GNU/Linux. For more information about GNU/Linux vs. Linux, see <ulink
        url="http://en.wikipedia.org/wiki/GNU/Linux_naming_controversy">http://en.wikipedia.org/wiki/GNU/Linux_naming_controversy</ulink>.</para>
      </footnote>, <indexterm>
        <primary>Unix startup scripts</primary>
      </indexterm>Nexus also includes scripts that can be configured to start
    Nexus as a service. The following sections provide instructions for
    configuring Nexus as a service.</para>

    <section id="install-sect-startup-scripts">
      <title>Startup Scripts for GNU/Linux</title>

      <para><indexterm>
          <primary>Installation</primary>

          <secondary>Unix startup scripts</secondary>
        </indexterm>You can configure Nexus to start automatically, by copying
      the <filename>nexus</filename> script to the
      <filename>/etc/init.d</filename> directory. On a GNU/Linux system
      (tested with Redhat, Fedora, Ubuntu, or CentOS) perform the following
      operations as the root user:</para>

      <orderedlist>
        <listitem>
          <para>Copy either
          <filename>\${NEXUS_HOME}/bin/jsw/linux-ppc-64/nexus</filename>,
          <filename>\${NEXUS_HOME}/bin/jsw/linux-x86-32/nexus</filename>, or
          <filename>\${NEXUS_HOME}/bin/jsw/linux-x86-64/nexus</filename> to
          <filename>/etc/init.d/nexus</filename>.</para>
        </listitem>

        <listitem>
          <para>Make the <filename>/etc/init.d/nexus</filename> script
          executable - <command>chmod 755 /etc/init.d/nexus</command></para>
        </listitem>

        <listitem>
          <para>Edit this script changing the following variables:</para>

          <itemizedlist>
            <listitem>
              <para>Change <varname>APP_NAME</varname> to "nexus"</para>
            </listitem>

            <listitem>
              <para>Change <varname>APP_LONG_NAME</varname> to "Sonatype
              Nexus"</para>
            </listitem>

            <listitem>
              <para>Add a variable <varname>NEXUS_HOME</varname> which points
              to your Nexus installation directory</para>
            </listitem>

            <listitem>
              <para>Add a variable <varname>PLATFORM</varname> which contains
              either <varname>linux-x86-32</varname>,
              <varname>linux-x86-64</varname>, or
              <varname>linux-ppc-64</varname></para>
            </listitem>

            <listitem>
              <para>Change <varname>WRAPPER_CMD</varname> to
              <filename>\${NEXUS_HOME}/bin/jsw/\${PLATFORM}/wrapper</filename></para>
            </listitem>

            <listitem>
              <para>Change <varname>WRAPPER_CONF</varname> to
              <filename>\${NEXUS_HOME}/bin/jsw/conf/wrapper.conf</filename></para>
            </listitem>

            <listitem>
              <para>Change <varname>PIDDIR</varname> to
              <filename>/var/run</filename>.</para>
            </listitem>

            <listitem>
              <para>Add a <varname>JAVA_HOME</varname> variable which points
              to your local Java installation</para>
            </listitem>

            <listitem>
              <para>Add a <filename>\${JAVA_HOME}/bin</filename> to the
              <varname>PATH</varname></para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>(Optional) Set the RUN_AS_USER to "nexus". If you do this, you
          will need to:</para>

          <itemizedlist>
            <listitem>
              <para>Create a nexus user</para>
            </listitem>

            <listitem>
              <para>Change the Owner and Group of your nexus install directory
              to nexus</para>
            </listitem>
          </itemizedlist>

          <note>
            <para>If you set the "RUN_AS_USER" variable, you'll have to change
            the "pid" directory to point to a directory where this user has
            read/write permissions. In most Linux distributions, /var/run is
            only writable by root. The properties that would need to be added
            to customize the PID file location is "wrapper.pid". For more
            information about this property and how it would be configured in
            wrapper.conf, see: <ulink
            url="http://wrapper.tanukisoftware.com/doc/english/properties.html">http://wrapper.tanukisoftware.com/doc/english/properties.html</ulink></para>
          </note>
        </listitem>
      </orderedlist>

      <figure id="fig-installing_bin-dir-l32">
        <title>Script Directory for 32-bit GNU/Linux in
        \${NEXUS_HOME}/bin/jsw</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata align="center"
                       fileref="figs/web/installing_bin-dir-l32.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/installing_bin-dir-l32.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>At the end of this you should have a file in
      <filename>/etc/init.d/nexus</filename> which starts with a series of
      configuration properties which look something like this (assuming that
      you've installed Nexus in <filename>/usr/local/nexus</filename> and that
      you have Java installed in
      <filename>/usr/java/latest</filename>):</para>

      <programlisting>JAVA_HOME=/usr/java/latest
PATH=\${PATH}:\${JAVA_HOME}/bin
APP_NAME="nexus"
APP_LONG_NAME="Sonatype Nexus"
NEXUS_HOME=/usr/local/nexus
PLATFORM=linux-x86-64
WRAPPER_CMD="\${NEXUS_HOME}/bin/jsw/\${PLATFORM}/wrapper"
WRAPPER_CONF="\${NEXUS_HOME}/bin/jsw/conf/wrapper.conf"
PRIORITY=
PIDDIR="/var/run"
#RUN_AS_USER=nexus
</programlisting>

      <section id="install-sect-redhat-fedora">
        <title>Add Nexus as a Service on Redhat, Fedora, and CentOS</title>

        <para><indexterm>
            <primary>Installation</primary>

            <secondary>Redhat</secondary>
          </indexterm><indexterm>
            <primary>Installation</primary>

            <secondary>Fedora</secondary>
          </indexterm><indexterm>
            <primary>Installation</primary>

            <secondary>CentOS</secondary>
          </indexterm>This script has the appropriate
        <command>chkconfig</command> directives, so all you need to do to add
        Nexus as a service is run the following commands:</para>

        <screen>$ <command>cd /etc/init.d</command>
$ <command>chkconfig --add nexus</command>
$ <command>chkconfig --levels 345 nexus on</command>
$ <command>service nexus start</command>
Starting Sonatype Nexus...
$ <command>tail -f /usr/local/nexus/logs/wrapper.log</command></screen>

        <para>The second command adds nexus as a service to be started and
        stopped with the <command>service</command> command and managed by the
        <command>chkconfig</command> command. <command>chkconfig</command>
        manages the symbolic links in <filename>/etc/rc[0-6].d</filename>
        which control the services to be started and stopped when the
        operating system restarts or transitions between run-levels. The third
        command adds nexus to run-levels 3, 4, and 5. The service command
        starts Nexus, and the last command tails the
        <filename>wrapper.log</filename> to verify that Nexus has been started
        successfully. If Nexus has started successfully, you should see a
        message notifying you that Nexus is listening for
        <acronym>HTTP</acronym> connections on a port.</para>
      </section>

      <section id="install-sect-ubntu">
        <title>Add Nexus as a Service on Ubuntu</title>

        <para><indexterm>
            <primary>Installation</primary>

            <secondary>Ubuntu</secondary>
          </indexterm>The process for setting Nexus up as a service on Ubuntu
        differs slightly from the process used on a Redhat variant. Instead of
        running chkconfig, you should run the following sequence of commands
        once you've configured the startup script in
        <filename>/etc/init.d</filename>:</para>

        <screen>$ <command>cd /etc/init.d</command>
$ <command>update-rc.d nexus defaults</command>
$ <command>service nexus start</command>
Starting Sonatype Nexus...
$ <command>tail -f /usr/local/nexus/logs/wrapper.log</command>
</screen>
      </section>
    </section>

    <!--    <section>
      <title>Startup Script for Mac OSX</title>

      <para></para>

      <figure id="fig-installing_bin-dir-osx">
        <title>Contents of the Mac OSX Universal 32-bit Script
        Directory</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata align="center"
                       fileref="figs/web/installing_bin-dir-osx.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/installing_bin-dir-osx.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section> -->

    <!--    <section>
      <title>Startup Scripts for Solaris</title>

      <para></para>

      <figure id="fig-installing_bin-dir-solaris">
        <title></title>

        <mediaobject>
          <imageobject role="web">
            <imagedata align="center"
                       fileref="figs/web/installing_bin-dir-solaris.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/installing_bin-dir-solaris.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section> -->

    <!--    <section>
      <title>Startup Scripts for Windows</title>

      <para></para>

      <figure id="fig-installing_bin-dir-win">
        <title></title>

        <mediaobject>
          <imageobject role="web">
            <imagedata align="center"
                       fileref="figs/web/installing_bin-dir-win.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/installing_bin-dir-win.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>
    </section> -->
  </section>

  <section id="install-sect-behind-proxy">
    <title>Running Nexus Behind a Proxy</title>

    <para><indexterm>
        <primary>network configuration</primary>

        <secondary>running behind proxy</secondary>
      </indexterm>If you installed Nexus as a stand-alone application, Nexus
    is running on a high-performance servlet container based on Java NIO. From
    a performance perspective, there is no reason for you not to run Nexus by
    itself without a proxy. Yet, more often than not, organizations run
    applications behind a proxy for security concerns and to consolidate
    multiple disparate applications using tools like
    <varname>mod_rewrite</varname> and <varname>mod_proxy</varname>. For this
    reason, we've included some brief instructions for configuration
    <varname><indexterm>
        <primary>Apache httpd</primary>

        <secondary>mod_proxy</secondary>
      </indexterm>mod_proxy</varname> in <indexterm>
        <primary>Apache httpd</primary>
      </indexterm>Apache httpd. We assume that you've already installed Apache
    2, and that you are using a Virtual Host for www.somecompany.com.</para>

    <para>Let's assume that you wanted to host Nexus behind Apache HTTPd at
    the <acronym>URL</acronym> <ulink
    url="http://www.somecompany.com">http://www.somecompany.com</ulink>. To do
    this, you'll need to change the context path that Nexus is served
    from.</para>

    <orderedlist>
      <listitem>
        <para>Edit <filename>plexus.properties</filename> in
        <filename>\${NEXUS_HOME}/conf</filename>. You'll see an element named
        <sgmltag>webapp-context-path</sgmltag>. Change this value from
        "/nexus" to "/"</para>
      </listitem>

      <listitem>
        <para>Restart Nexus and Verify that it is available on <ulink
        url="http://localhost:8081/">http://localhost:8081/</ulink>.</para>
      </listitem>

      <listitem>
        <para>Clear the Base <acronym>URL</acronym> in Nexus as shown in <xref
        linkend="fig-nexus-server-config-3" /> under Application Server
        Settings.</para>
      </listitem>
    </orderedlist>

    <para>At this point, edit the HTTPd configuration file for the
    www.somecompany.com virtual host. Include the following to expose Nexus
    via <varname>mod_proxy</varname> at <ulink
    url="http://www.somecompany.com/">http://www.somecompany.com/</ulink>.</para>

    <programlisting>ProxyRequests Off 
ProxyPreserveHost On 

&lt;VirtualHost *:80&gt; 
  ServerName www.somecompany.com 
  ServerAdmin admin@somecompany.com 
  ProxyPass / http://localhost:8081/
  ProxyPassReverse / http://localhost:8081/
  ErrorLog logs/somecompany/nexus/error.log 
  CustomLog logs/somecompany/nexus/access.log common 
&lt;/VirtualHost&gt;</programlisting>

    <para>If you just wanted to continue to serve Nexus at the
    <filename>/nexus</filename> context path, you would not change the
    <sgmltag>contextPath</sgmltag> in
    <filename>\${NEXUS_HOME}/conf/plexus.xml</filename> and you would include
    the context path in your <varname>ProxyPass</varname> and
    <varname>ProxyPassReverse</varname> directives as follows:</para>

    <programlisting>  ProxyPass /nexus/ http://localhost:8081/nexus/
  ProxyPassReverse /nexus/ http://localhost:8081/nexus/
</programlisting>

    <para>Apache configuration is going to vary based on your own
    application's requirements and the way you intend to expose Nexus to the
    outside world. If you need more details about Apache httpd and
    <varname>mod_proxy</varname>, please see <ulink
    url="http://httpd.apache.org">http://httpd.apache.org</ulink>.</para>
  </section>

  <section id="install-sect-as-a-war">
    <title>Installing the Nexus WAR</title>

    <para><indexterm>
        <primary>Installation</primary>

        <secondary>in a servlet container</secondary>
      </indexterm><indexterm>
        <primary>Installation</primary>

        <secondary>in an application server</secondary>
      </indexterm><indexterm>
        <primary>Installation</primary>

        <secondary>in Apache Tomcat</secondary>
      </indexterm><indexterm>
        <primary>Installation</primary>

        <secondary>in Jetty</secondary>
      </indexterm><indexterm>
        <primary>Installation</primary>

        <secondary>in Glassfish</secondary>
      </indexterm>Nexus Open Source is available as a <acronym>WAR</acronym>
    which can be run in an existing application server or servlet container.
    The Nexus Open Source <acronym>WAR</acronym> has been successfully tested
    in Tomcat, Jetty, and Resin. If you need to run Nexus under Glassfish,
    please see <xref linkend="install-sect-war-gf" />. To download the Nexus
    Open Source <acronym>WAR</acronym>, go to <ulink
    url="http://nexus.sonatype.org/using/download.html">http://nexus.sonatype.org/using/download.html</ulink>.
    Click on the Download Site link and then download the Nexus
    <acronym>WAR</acronym> <filename>nexus-webapp-1.6.0.war</filename>. Once
    you have downloaded the Nexus Open Source <acronym>WAR</acronym>, you can
    install it in a servlet container or application server.</para>

    <para>The process for installing a <acronym>WAR</acronym> in an servlet
    container or application server is going to vary for each specific
    application. Often, this installation process is as simple as dropping a
    <acronym>WAR</acronym> file in a special directory and restarting the
    container. For example, to install the Nexus <acronym>WAR</acronym> in
    Tomcat, drop the <filename>nexus-webapp-1.6.0.war</filename> file in
    <filename>\${TOMCAT_HOME}/webapps</filename> and restart your Tomcat
    instance. Assuming that Tomcat is configured on port 8080 once Tomcat is
    started, Nexus will be available on <ulink
    url="http://localhost:8080/nexus-webapp-1.6.0">http://localhost:8080/nexus-webapp-1.6.0</ulink>.
    If you would like a less verbose <acronym>URL</acronym>, copy
    <filename>nexus-webapp-1.6.0.war</filename> to a file named
    <filename>nexus.war</filename> before copying the distribution to
    \<filename>${TOMCAT_HOME}/webapps</filename>.</para>

    <note>
      <para>When installing Nexus as a <acronym>WAR</acronym> in an
      application server or servlet container, it automatically creates a
      <filename>sonatype-work</filename> directory in
      <filename>~/sonatype-work</filename>. This directory contains all of the
      necessary configuration and repository storage for Nexus.</para>
    </note>

    <section id="install-sect-war-gf">
      <title>Running the Nexus WAR in Glassfish</title>

      <para><indexterm>
          <primary>Installation</primary>

          <secondary>in Glassfish</secondary>
        </indexterm><indexterm>
          <primary>Glassfish</primary>
        </indexterm>There is a known logging configuration conflict between
      the Nexus Open Source <acronym>WAR</acronym> and Glassfish. To address
      this conflict, you will need to modify the
      <filename>log4j.properties</filename> file and change a few of the
      directives that print messages to the console. The
      <filename>log4j.properties</filename> file is located in
      <filename>~/sonatype-work/conf/log4j.properties</filename>. This file is
      created the first time you attempt to deploy Nexus to Glassfish. To
      create this file, deploy Nexus to Glassfish. While this initial
      deployment will fail due to a logging conflict, the act of deploying
      Nexus to Glassfish will create the working directory in
      <filename>~/sonatype-work</filename> and the
      <filename>log4j.properties</filename> file.</para>

      <para>Edit this <filename>log4j.properties</filename> file as
      follows:</para>

      <orderedlist>
        <listitem>
          <para>On the first line, change "<literal>log4j.rootLogger=INFO,
          console, logfile</literal>" to "<literal>log4j.rootLogger=INFO,
          logfile</literal>"</para>
        </listitem>

        <listitem>
          <para>Remove the last three lines starting with
          "<literal>log4j.appender.console</literal>"</para>
        </listitem>
      </orderedlist>

      <para>These changes will instruct Log4J not to print messages to the
      console. Once you make these edits, restart Glassfish.</para>
    </section>
  </section>

  <section id="installing-sect-licensing">
    <title>Installing a Nexus Professional License</title>

    <para><indexterm>
        <primary>Nexus Professional</primary>

        <secondary>installing license</secondary>
      </indexterm><indexterm>
        <primary>license installation</primary>
      </indexterm>To install a Nexus Professional license, click on Licensing
    in the Enterprise menu. Clicking on Licensing will bring up the panel
    shown in <xref linkend="fig-installations-licensing" />. To upload your
    Nexus Professional license, click on Browse..., select the file, and click
    on Upload.</para>

    <figure id="fig-installations-licensing">
      <title>Nexus Professional Licensing Panel</title>

      <mediaobject>
        <imageobject role="web">
          <imagedata align="center"
                     fileref="figs/web/repository-manager_license.png" />
        </imageobject>

        <imageobject role="print">
          <imagedata align="center"
                     fileref="figs/print/repository-manager_license.pdf"
                     scalefit="0" width="100%" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>Once you have selected a license and uploaded it to Nexus, Nexus
    Professional will display a dialog box with the Nexus Professional
    End-user License Agreement as shown in <xref
    linkend="fig-installation-eula" />. If you agree with the terms and
    conditions, click on "I Agree".</para>

    <figure id="fig-installation-eula">
      <title>Nexus Professional End-user License Agreement</title>

      <mediaobject>
        <imageobject role="web">
          <imagedata align="center"
                     fileref="figs/web/installing_license_eula.png" />
        </imageobject>

        <imageobject role="print">
          <imagedata align="center"
                     fileref="figs/print/installing_license_eula.pdf"
                     scalefit="0" width="100%" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>Once you have agreed to the terms and conditions contained in the
    End User License Agreement, Nexus Professional will then display a dialog
    box confirming the installation of a Nexus Professional license as shown
    in <xref linkend="fig-installation-license-upload-config" />.</para>

    <figure id="fig-installation-license-upload-config">
      <title>License Upload Finished Dialog</title>

      <mediaobject>
        <imageobject role="web">
          <imagedata align="center"
                     fileref="figs/web/installing_license_uploaded.png" />
        </imageobject>

        <imageobject role="print">
          <imagedata align="center"
                     fileref="figs/print/installing_license_uploaded.pdf"
                     scalefit="0" width="100%" />
        </imageobject>
      </mediaobject>
    </figure>

    <para><indexterm>
        <primary>Nexus Professional</primary>

        <secondary>uninstalling license</secondary>
      </indexterm>If you need to move your Nexus Professional license, you can
    click on the "Uninstall License" button at the bottom of the Licensing
    Panel. Clicking on this button will show the dialog in <xref
    linkend="fig-installation-config-uninstall" /> which confirms that you
    want to uninstall a license.</para>

    <figure id="fig-installation-config-uninstall">
      <title>Uninstall License Confirmation Dialog</title>

      <mediaobject>
        <imageobject role="web">
          <imagedata align="center"
                     fileref="figs/web/installing_uninstall_license.png" />
        </imageobject>

        <imageobject role="print">
          <imagedata align="center"
                     fileref="figs/print/installing_uninstall_license.pdf"
                     scalefit="0" width="100%" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>Clicking Yes in this dialog box will uninstall the license from
    Nexus Professional and display another dialog which confirms that the
    license has been successfully uninstalled.</para>

    <figure>
      <title>License Uninstall Completed Dialog</title>

      <mediaobject>
        <imageobject role="web">
          <imagedata align="center"
                     fileref="figs/web/installing_uninstall_completed.png" />
        </imageobject>

        <imageobject role="print">
          <imagedata align="center"
                     fileref="figs/print/installing_uninstall_completed.pdf"
                     scalefit="0" width="100%" />
        </imageobject>
      </mediaobject>
    </figure>

    <section>
      <title>Evaluation Expiration</title>

      <para><indexterm>
          <primary>Nexus Professional</primary>

          <secondary>evaluation license</secondary>
        </indexterm>If you have downloaded the Nexus Professional evaluation,
      you will have thirty days to evaluate the product. After the expiration
      of this thirty day evaluation period, Nexus Professional will revert
      back to Nexus Open Source. To reactivate Nexus Professional after the
      end of your evaluation period, contact a Sonatype sales representative
      at <ulink
      url="mailto:sales@sonatype.com">sales@sonatype.com</ulink>.</para>
    </section>
  </section>

  <section>
    <title>Sonatype Nexus Directories</title>

    <para><indexterm>
        <primary>Nexus directories</primary>
      </indexterm>The following sections describe the various directories that
    are a part of any Nexus installation. When you install Nexus Open Source
    or Nexus Professional, you are creating two directories: a directory which
    contains the Nexus runtime and application, and a directory which contains
    your own configuration and data. When you upgrade to a newer version of
    Nexus, you replace the Nexus application directory and retain all of your
    own custom configuration and repository data in
    <filename>sonatype-work/</filename>.</para>

    <section id="sect-installing-work-dir">
      <title>Sonatype Nexus Work Directory</title>

      <para><indexterm>
          <primary>Sonatype work directory</primary>
        </indexterm>The <filename>sonatype-work/</filename> directory is
      installed as a sibling to the nexus application directory, and the
      location of this directory can be configured via the
      <filename>plexus.properties</filename> file which is described in <xref
      linkend="sect-installing-conf-dir" />. <xref
      linkend="fig-installing_work-dir" /> shows the Sonatype Nexus work
      directory with the <filename>conf/</filename> directory expanded.</para>

      <figure id="fig-installing_work-dir">
        <title>The Sonatype Nexus Work Directory</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata align="center"
                       fileref="figs/web/installing_work-dir.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/installing_work-dir.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>The Sonatype Nexus work directory contains the following
      subdirectories:</para>

      <variablelist>
        <varlistentry>
          <term><filename>backup/</filename></term>

          <listitem>
            <para><indexterm>
                <primary>configuration backups</primary>
              </indexterm>If you have configured a scheduled job to backup
            Nexus configuration, this directory is going to contain a number
            of ZIP archives that contain snapshots of Nexus configuration.
            Each ZIP file contains the contents of the
            <filename>conf/</filename> directory. (Automated backups are a
            feature of Nexus Professional.)</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>conf/</filename></term>

          <listitem>
            <para><indexterm>
                <primary>Nexus configuration</primary>
              </indexterm>This directory contains the Nexus configuration.
            Settings that define the list of Nexus repositories, the logging
            configuration, the staging and procurement configuration, and the
            security settings are all captured in this directory.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>indexer/</filename></term>

          <listitem>
            <para>Contains a Nexus index for all repositories and repository
            groups managed by Nexus. A Nexus index is a Lucene index which is
            the standard for indexing and searching a Maven repository. Nexus
            maintains a local index for all repositories, and can also
            download a Nexus index from remote repositories.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>logs/</filename></term>

          <listitem>
            <para><indexterm>
                <primary>Nexus logs</primary>
              </indexterm><indexterm>
                <primary>log files</primary>
              </indexterm>Stores the <filename>nexus.log</filename> file: the
            log file that contains information about a running instance of
            Nexus. This directory also contains archived copies of Nexus log
            files. Nexus log files are rotated every day. To reclaim disk
            space, you can delete old log files from the
            <filename>logs/</filename> directory.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>p2/</filename></term>

          <listitem>
            <para>If you are using the P2 repository management features of
            Nexus Professional, this directory contains a local cache of P2
            repository artifacts.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>proxy/</filename></term>

          <listitem>
            <para><indexterm>
                <primary>proxy storage directory</primary>
              </indexterm>Stores data about the files contained in a remote
            repository. Each proxy repository has a subdirectory in the
            <filename>proxy/attributes/</filename> directory and every file
            that Nexus has interacted with in the remote repository has an XML
            file which captures such data as the: last requested timestamp,
            the remote URL for a particular file, the length of the file, and
            the digests for a particular file among other things. If you need
            to backup the local cached contents of a proxy repository, you
            should also back up the contents of the proxy repository's
            directory under <filename>proxy/attributes/</filename>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>storage/</filename></term>

          <listitem>
            <para>Stores artifacts and metadata for Nexus repositories. Each
            repository is a subdirectory which contains the artifacts in a
            repository. If the repository is a proxy repository, the storage
            directory will contain locally cached artifacts from the remote
            repository. If the repository is a hosted repository, the storage
            directory will contain all artifacts in the repository. If you
            need to backup the contents of a repository, you should backup the
            contents of the storage directory.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>template-store/</filename></term>

          <listitem>
            <para>Contains templates for default repositories. If you examine
            the XML files in this directory, you will see that they contain
            default templates for each different type of repository. For
            example, the
            <filename>repository-default_proxy_release.xml</filename> file
            contains defaults for a Proxy repository with a release
            policy.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>timeline/</filename></term>

          <listitem>
            <para>Contains an index which Nexus uses to store events and other
            information to support internal operations. Nexus uses this index
            to store feeds and history.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>trash/</filename></term>

          <listitem>
            <para><indexterm>
                <primary>trash directory</primary>
              </indexterm>If you have configured scheduled jobs to remove
            snapshot artifacts or to delete other information from
            repositories, the deleted data will be stored in this directory.
            To empty this trash folder, view a list of Nexus repositories, and
            then click on the Trash icon in the Nexus user interface.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>The <filename>conf/</filename> directory contains a number of
      files which allow for configuration and customization of Nexus. All of
      the files contained in this directory are altered by the Nexus
      administrative user interface. While you can change the configuration
      settings contained in these files with a text editor, Sonatype
      recommends that you modify the contents of these files using the Nexus
      administrative user interface.</para>

      <variablelist>
        <varlistentry>
          <term>l<filename>og4j.properties</filename></term>

          <listitem>
            <para><indexterm>
                <primary>log configuration</primary>
              </indexterm>Contains Log4J configuration, if you need to
            customize the detail of log messages, the frequency of log file
            rotation, or if you want to connect your own, custom Log4J
            appenders, you would alter this configuration file.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>lvo-plugin.xml</filename></term>

          <listitem>
            <para>Contains configuration for the latest version plugin. This
            XML file contains the location of the properties file which Nexus
            queries to check for a newer version of Nexus.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>nexus.xml</filename></term>

          <listitem>
            <para>The bulk of the configuration of Nexus is contained in this
            file. This file maintains a list of repositories, and all
            server-wide configuration like the SMTP settings, security realms,
            repository groups, targets, and path mappings.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>pgp.xml</filename></term>

          <listitem>
            <para>Contains PGP key server configuration.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>nexus-obr-plugin.properties</filename></term>

          <listitem>
            <para>Contains configuration for the Nexus OSGi Bundle repository
            plugin in Nexus Professional.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>procurement.xml</filename></term>

          <listitem>
            <para>Contains configuration for the Nexus Procurement plugin in
            Nexus Professional.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>security.xml</filename></term>

          <listitem>
            <para>Contains security information about users and roles in
            Nexus.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>staging.xml</filename></term>

          <listitem>
            <para>Contains configuration for the Nexus Staging plugin in Nexus
            Professional.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section id="sect-installing-conf-dir">
      <title>Nexus Configuration Directory</title>

      <para><indexterm>
          <primary>configuration directory</primary>
        </indexterm>After installing Nexus Professional, you will have a
      <filename>nexus-professional-webapp-${nexus.version}/</filename>
      directory and a <filename>sonatype-work/</filename> directory, and after
      installing Nexus Open Source, you will have a
      <filename>nexus-webapp-${nexus.version}/</filename> directory and a
      <filename>sonatype-work/</filename> directory. This section details the
      contents of the <filename>conf</filename> directory that is shown in
      <xref linkend="fig-installing_conf-dir" />. This directory contains
      configuration for the Jetty servlet container. You will only need to
      modify the files in this directory if you are customizing the
      configuration of <indexterm>
          <primary>Plexus</primary>
        </indexterm>Plexus, the <indexterm>
          <primary>Jetty</primary>
        </indexterm>Jetty servlet container, or the behavior of the scripts
      that start Nexus.</para>

      <figure id="fig-installing_conf-dir">
        <title>Nexus Professional Configuration Directory</title>

        <mediaobject>
          <imageobject role="web">
            <imagedata align="center"
                       fileref="figs/web/installing_conf-dir.png" />
          </imageobject>

          <imageobject role="print">
            <imagedata align="center"
                       fileref="figs/print/installing_conf-dir.pdf"
                       scalefit="0" width="100%" />
          </imageobject>
        </mediaobject>
      </figure>

      <para>The files and folders contained in this directory are:</para>

      <variablelist>
        <varlistentry>
          <term><filename>classworlds.conf</filename></term>

          <listitem>
            <para>Defines the order in which resources and classes are loaded
            from the classpath. It is unlikely that even the most advanced
            Nexus users will ever need to customize the contents of this
            file.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>plexus.properties</filename></term>

          <listitem>
            <para>This file contains configuration variables which control the
            behavior of Plexus and the Jetty servlet container. If you are
            customizing the port and host that Nexus will listen to, you would
            change the <varname>application-port</varname> and
            <varname>application-host</varname> properties defined in this
            file. If you wanted to customize the location of the Sonatype work
            directory, you would modify the value of the
            <varname>nexus-work</varname> property in this configuration
            file.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>plexus.xml</filename></term>

          <listitem>
            <para><indexterm>
                <primary>Plexus</primary>

                <secondary>configuration</secondary>
              </indexterm>Defines the class names and configuration of
            components which are loaded by Plexus at startup. This file should
            never be changed as all configurable values have been removed from
            this file and placed in
            <filename>plexus.properties</filename>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>jetty.xml</filename></term>

          <listitem>
            <para><indexterm>
                <primary>Jetty</primary>

                <secondary>configuration</secondary>
              </indexterm>If this file is present in the
            <filename>conf/</filename> directory, it will be used to configure
            Jetty.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>The <filename>conf/examples/</filename> directory contains sample
      Jetty configuration files which can be used to customize the behavior of
      the Jetty servlet container:</para>

      <variablelist>
        <varlistentry>
          <term><filename>jetty.xml</filename></term>

          <listitem>
            <para>contains a <filename>jetty.xml</filename> sample with no
            customizations. This sample file listens on the
            <varname>\${application-port}</varname> defined in
            <filename>plexus.properties</filename>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>jetty-ajp.xml</filename></term>

          <listitem>
            <para>Contains a <filename>jetty.xml</filename> sample which will
            configure Nexus to listen on an AJP port 8009. This configuration
            can be used if you are proxying your Nexus server with web server
            which understands the AJP protocol such as Apache httpd with the
            mod_proxy_ajp module.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>jetty-dual-ports-with-ssl.xml</filename></term>

          <listitem>
            <para>Contains a <filename>jetty.xml</filename> sample which
            configures Nexus to listen on both the
            <varname>\${application-port}</varname> and
            <varname>\${application-port-ssl}</varname> (as defined in
            <filename>plexus.properties</filename>). This sample configuration
            also contains the SSL redirect rule.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>jetty-faster-windows.xml</filename></term>

          <listitem>
            <para>Contains a <filename>jetty.xml</filename> sample which
            configures a response buffer size that will address performance
            issues on Windows 2003 Server, for more information about this fix
            see <ulink
            url="http://docs.codehaus.org/display/JETTY/Slow+Win2003">the
            Jetty Wiki</ulink>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>jetty-header-buffer.xml</filename></term>

          <listitem>
            <para>Contains a <filename>jetty.xml</filename> sample which
            increases the <varname>headerBufferSize</varname> to 8k from the
            default of 4k. Documentation about the header buffer size can be
            found on <ulink
            url="http://docs.codehaus.org/display/JETTY/Configuring+Connector">the
            Jetty Wiki</ulink>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>jetty-simple-https-proxy.xml</filename></term>

          <listitem>
            <para>Contains a <filename>jetty.xml</filename> sample which
            should be used if you are proxying a Nexus instance with a web
            server that is handling SSL. For example, if you were proxying
            Nexus with Apache httpd server using mod_ssl you would use this
            configuration to configure the Jetty
            <classname>RewriteHandler</classname>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><filename>jetty-ssl.xml</filename></term>

          <listitem>
            <para>Contains a <filename>jetty.xml</filename> sample which will
            only serve SSL encrypted content from
            <varname>\${application-port}</varname> (as defined in
            <filename>plexus.properties</filename>).</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>The <filename>conf/examples/proxy-https/</filename> directory
      contains two files: <filename>apache2.conf</filename> and
      <filename>jetty.xml</filename>. <filename>apache2.conf</filename>
      contains sample <indexterm>
          <primary>Apache httpd</primary>

          <secondary>mod_ssl</secondary>
        </indexterm>mod_ssl and <indexterm>
          <primary>Apache httpd</primary>

          <secondary>mod_proxy</secondary>
        </indexterm>mod_proxy directives to configure Apache httpd to handle
      <indexterm>
          <primary>Secure Sockets Layer (SSL)</primary>
        </indexterm><indexterm>
          <primary>Transport Layer Security (TLS)</primary>
        </indexterm>SSL, and <filename>jetty.xml</filename> contains the
      required Jetty configuration to configure Nexus to operate behind a
      proxy that is handling SSL.</para>
    </section>
  </section>
</chapter>
